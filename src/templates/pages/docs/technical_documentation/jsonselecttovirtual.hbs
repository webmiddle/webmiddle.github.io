{{#markdown}}
### JSONSelectToVirtual

Similar to the CheerioToVirtual service, but for **JSON** resources.

**JSONSelect** is the library used to query the JSON document, it
provides CSS-like selectors. The main difference with respect to
Cheerio, other than the somewhat different selector syntax, is that the
collection of elements are just plain JavaScript arrays.

<br />
**Properties:**

<table class="table table-bordered table-striped table-responsive">
  <thead>
    <tr>
      <td>Name</td>
      <td>Description</td>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>name</td>
      <td>The name of the returned resource.</td>
    </tr>
    <tr>
      <td>from</td>
      <td>The HTML/XML resource to convert.</td>
    </tr>
    <tr>
      <td>fullConversion (optional)</td>
      <td>Set this to true to do a 1:1 conversion, without having to specify a schema.</td>
    </tr>
  </tbody>
</table>

The following values can be specified as child in the virtual schema, as
they will be **processed** in the same way of CheerioToVirtual:

-   Any element that can be **evaluated** by means of webmiddle.evaluate
    function.

-   **virtual**

-   **array:**

-   **object**

-   **undefined**

-   **(default): any other value is kept as is.**

<br />
**Helper functions:**

-   **elGet(selector, values):** if selector is set, then it starts by
    querying the collection of elements with such selector. The values
    property is used in case the selector contains placeholders (see
    JSONSelect documentation).<br />
    Returns the first element of the (obtained) collection.

-   **elJoin(separator)**: plain Array join.

-   **elMap(callback):** plain Array map, however the function is called
    with a collection (i.e. an array) containing the single current
    element.

-   **elPipe(tasks):** plain Array reduce on the given tasks, where the
    initial value is the collection of elements.
{{/markdown}}