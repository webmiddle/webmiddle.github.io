{{#markdown}}
### Meta

Given the project input, it must return an object with the following
properties:

-   **count**: the number of results.

-   **numberOfPages**: the number of pages of results. This obviously
    depends on both the count and the number of results per page.

This service is essential for the business logic, as it states how many
pages need to be processed.

Its implementation is rather straightforward, since the SearchArticle
services we implemented in the previous section already include the
count element. This was the code from foxnews.com:

```jsx
<count el="[ng-bind='numFound']">
  {elPipe([
    elText(),
    normalizeCount(),
  ])}
</count>
```

The service wrapper is thus the following:

```jsx
function Meta(props) {
  return (
    <Pipe>
      <Parent
        {...props}
        name="firstPage"
        pageNumber={0}
      />

      {({ firstPage }) => {
        const count = firstPage.content.root.count;
        return {
          name: 'meta',
          contentType: 'application/json',
          content: {
            count,
            numberOfPages: Math.ceil(
              count / parentSettings.resultsPerPage
            ),
          },
        };
      }}
    </Pipe>
  );
}
```

Here, **Parent** is the wrapped service, e.g. the SearchArticle of the
foxnews.com site. We are calling it with the project input on the first
page; we then extract the count from the resource and use it together
with the number of results per page to calculate the **numberOfPages**.

The **webmiddle** object is passed to every service and refers to the
webmiddle to which the service belongs (in this case the site handler we
have just shown). In the other end, **options** is an object containing
info on how the service is going to be evaluated, however it isnâ€™t
needed in this discussion. See the technical documentation for more
details.

<br />
The Meta of the nytimes.com site handler is very similar, the only
difference is that the project input **nytimesApiKey** needs to be
renamed into the site input **apiKey**.
{{/markdown}}