{{#markdown}}
Project webmiddle
-----------------

We showed how to create services for both Fox News and the New York
Times. Let’s see how these services can be used at a higher layer to
create an application that does the actual news article search,
returning as output a JSON file with the list of retrieved articles.

We will see what the input/output format is, how to create the site
handlers and finally we will show the general business logic.

<br />
**Project input**: an object with the following properties:

-   **sites**: an array containing the names of the sites to use in the
    search.<br />
    Example: \["foxnews.com", "nytimes.com"\].

-   **query**: the search query.<br />
    Example: "internet of things".

-   **startYear**: optional, restricts the search to the articles
    published starting from such year.<br />
    Example: 2007.

-   **endYear**: optional, like startYear but as an upper bound to the
    article year.<br />
    Example: 2013.

-   **nytimesApiKey**: the API key to use in the New York Times API
    calls. It is only needed if the site array includes “nytimes.com”.

<br />
**Site handler output**: an array of articles, where each article is an
object with the following properties:

-   **url**: the url to the HTML page of the article.

-   **title:** the title of the article.

-   **description:** the description of the article.

-   **date:** the article publication date. Its format is “Month Day,
    Year”.<br />
    Example: "Sep 4, 2013".

-   **image**: url to the article image, often being the thumbnail of
    the article.

-   **category:** the category of the article. **<br />
    **Example: “health”.

-   **text**: the full content of the article.

Note that any of these properties could be null, undefined, empty or
even totally missing in case the respective article doesn’t support them
or in case the search just fails to extract them.

<br />
**Project output:** like the site output, but with an additional
property:

-   **source**: the name of the site to which the article belongs.<br />
    Example: “nytimes.com”.
{{/markdown}}